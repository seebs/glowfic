.post-container{class: [reply.is_a?(Reply) && reply.reply_order == 0 ? 'post-post'.freeze : (reply.is_a?(Reply) ? 'post-reply'.freeze : ''), (reply == @unread && current_user.try(:visible_unread?)) ? 'reply-highlighted' : '']}
  - if reply.is_a?(Reply) && reply.id.present?
    <a id="reply-#{reply.id}" class="noheight"> </a>
  - if reply == @unread
    .unread-marker-container
      %a#unread.unread-marker First unread marker
  .padding-10
    .post-info-box
      - if reply.icon_id && reply.keyword
        .post-icon
          = link_to icon_path(reply.icon_id) do
            = icon_mem_tag reply.url, reply.keyword
      .post-info-text
        - if reply.character_id
          .post-character
            - if reply.name
              = link_to reply.name, character_path(reply.character_id)
            - else
              [Deleted]
          - if reply.screenname
            .post-screenname= breakable_text(reply.screenname)
        - else
          .spacer-alt
        .post-author
          = link_to reply.username, user_path(reply.user_id)
    .post-edit-box
      - if reply.id.present?
        = link_to post_or_reply_link(reply), rel: 'alternate'.freeze do
          = image_tag "icons/link.png".freeze, title: 'Permalink'.freeze, alt: 'Permalink'.freeze
      - if reply.id.present? && (reply.editable_by?(current_user) || (reply.reply_order == 0 && reply.post.metadata_editable_by?(current_user)))
        - if reply.order == 0
          = link_to path_for(reply.post, 'edit_%s') do
            = image_tag "icons/pencil.png".freeze, title: 'Edit'.freeze, alt: 'Edit'.freeze
        - else
          = link_to path_for(reply, 'edit_%s') do
            = image_tag "icons/pencil.png".freeze, title: 'Edit'.freeze, alt: 'Edit'.freeze
      - if reply.id.present?
        - if reply.reply_order == 0  && reply.post.deletable_by?(current_user)
          = link_to path_for(reply.post, '%s'), method: :delete, data: { confirm: "Are you sure you wish to delete this #{reply.post.class.to_s.downcase}?" } do
            = image_tag "icons/cross.png".freeze, title: 'Delete'.freeze, alt: 'Delete'.freeze
        - elsif reply.deletable_by?(current_user)
          = link_to path_for(reply, '%s'), method: :delete, data: { confirm: "Are you sure you wish to delete this #{reply.class.to_s.downcase}?" } do
            = image_tag "icons/cross.png".freeze, title: 'Delete'.freeze, alt: 'Delete'.freeze
      - if reply.id.present? && reply.reply_order != 0 && logged_in?
        = link_to post_path(@post, unread: true, at_id: reply.id), method: :put do
          = image_tag "icons/eye.png".freeze, title: 'Mark Unread Here'.freeze, alt: 'Mark Unread Here'.freeze
    .post-content= sanitize_written_content(reply.content.to_s).html_safe
  .post-footer
    - unless local_assigns[:hide_footer]
      .right-align>
        .padding-5>
          - if reply.created_at
            = precede 'Posted '.freeze do
              %span.post-posted=pretty_time(reply.created_at)
          - if reply.id.present? && reply.has_edit_audits?
            = surround ' | Updated '.freeze, ' | '.freeze do
              %span.post-updated=pretty_time(reply.last_updated)
            = link_to 'See History'.freeze, path_for(reply, 'history_%s'), class: 'post-history'.freeze
