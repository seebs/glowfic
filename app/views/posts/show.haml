- content_for :breadcrumbs do
  = link_to "Continuities".freeze, boards_path
  &raquo;
  = link_to @post.board.name, board_path(@post.board)
  - if @post.section
    &raquo;
    = link_to @post.section.name, board_section_path(@post.section)
  &raquo;
  %b= @post.subject

%span.time-loaded= pretty_time(DateTime.now.in_time_zone)

- if @warnings.present?
  - content_for :flashes do
    .flash.error
      - if logged_in?
        = link_to warnings_post_path(@post, page: page, per_page: per_page), method: :post do
          .link-box.action-dismiss.float-right Dismiss for this post
      - else
        = link_to warnings_post_path(@post, page: page, per_page: per_page), method: :post, data: { confirm: 'Are you sure? You will not see content warnings again until you restart your browser!'.freeze } do
          .link-box.action-dismiss.float-right Dismiss all content warnings
      = image_tag "icons/exclamation.png".freeze, class: 'vmid'.freeze
      This post has the following content warnings:
      %ul
        - @warnings.each do |warning|
          %li= link_to warning.name, tag_path(warning)

.content-header
  %span#post-title= link_to @post.subject, post_path(@post)
  .view-button#post-menu
    = image_tag menu_img, class: 'icon-view'.freeze
#post-menu-holder
  #post-menu-box.hidden
    -# TODO ePub downloader
    -#= link_to post_path(@post, completed: false), method: :put do
    -#  %div
    -#    = image_tag "icons/book_go.png"
    -#    Download as ePub
    = link_to post_path(@post, view: 'flat'.freeze), rel: 'nofollow noindex'.freeze do
      %div
        = image_tag "icons/page_world.png".freeze
        View Flat HTML
    = link_to stats_post_path(@post) do
      %div
        = image_tag "icons/chart_bar.png".freeze
        View Metadata
    = link_to search_replies_path(post_id: @post.id) do
      %div
        = image_tag "icons/magnifier.png".freeze
        Search Post
    - if logged_in?
      = link_to post_path(@post, unread: true), method: :put do
        %div
          = image_tag "icons/eye.png".freeze, class: 'vmid'.freeze, style: 'margin-bottom: 3px;'.freeze
          Mark Unread
      - if @post.ignored_by?(current_user)
        = link_to post_path(@post, hidden: false), method: :put do
          %div
            = image_tag "icons/weather_cloudy.png".freeze, class: 'vmid'.freeze, style: 'margin-bottom: 3px;'.freeze
            Unhide
      - else
        = link_to post_path(@post, hidden: true), method: :put do
          %div
            = image_tag "icons/weather_clouds.png".freeze, class: 'vmid'.freeze, style: 'margin-bottom: 3px;'.freeze
            Hide
      - if fav = Favorite.between(current_user, @post)
        = link_to favorite_path(fav), method: :delete do
          %div
            = image_tag "icons/star_delete.png".freeze, class: 'vmid'.freeze, style: 'margin-bottom: 3px;'.freeze
            Unfavorite
      - else
        = link_to favorites_path(post_id: @post.id, page: page, per_page: per_page), method: :post do
          %div
            = image_tag "icons/star_add.png".freeze, class: 'vmid'.freeze, style: 'margin-bottom: 3px;'.freeze
            Favorite
      - if @post.metadata_editable_by?(current_user)
        - unless @post.completed?
          = link_to post_path(@post, status: 'complete'.freeze), method: :put do
            %div
              = image_tag "icons/book.png".freeze
              Mark Complete
        - unless @post.marked_hiatus?
          = link_to post_path(@post, status: 'hiatus'.freeze), method: :put do
            %div
              = image_tag "icons/hourglass.png".freeze
              Mark On Hiatus
        - unless @post.active?
          = link_to post_path(@post, status: 'active'.freeze), method: :put do
            %div
              = image_tag "icons/book_open.png".freeze
              Mark In Progress
        - unless @post.abandoned?
          = link_to post_path(@post, status: 'abandoned'.freeze), method: :put do
            %div
              = image_tag "icons/book_grey.png".freeze
              Mark Abandoned
        - if @post.authors_locked?
          = link_to post_path(@post, authors_locked: 'false'.freeze), method: :put do
            %div
              = image_tag "icons/lock_open.png".freeze
              Unlock Authors
        - else
          = link_to post_path(@post, authors_locked: 'true'.freeze), method: :put do
            %div
              = image_tag "icons/lock.png".freeze
              Lock Authors
        - author = @post.author_for(current_user)
        - if author&.can_owe?
          = link_to mark_posts_path(marked_ids: [@post.id], commit: "Remove from Replies Owed"), method: :post do
            %div
              = image_tag "icons/bell_delete.png".freeze
              Remove from Replies Owed
        - elsif author.present?
          = link_to mark_posts_path(marked_ids: [@post.id], commit: "Show in Replies Owed"), method: :post do
            %div
              = image_tag "icons/bell_add.png".freeze
              Show in Replies Owed
      -# TODO need more dynos
      -#= link_to users_path do
      -#  %div
      -#    = image_tag "icons/bell_add.png"
      -#    Turn on notifications
- if @post.description.present?
  .post-subheader= sanitize_post_description(@post.description).html_safe
- if @prev_post || @next_post
  .post-navheader
    - if @next_post
      = link_to post_path(@next_post) do
        .view-button Next Post &raquo;
    - if @prev_post
      = link_to post_path(@prev_post) do
        .view-button.float-none &laquo; Previous Post
- if page.to_i == 1
  = render partial: 'replies/single', locals: {reply: @post.replies.find_by(reply_order: 0) }
- else
  .post-expander
    .info + Show First Post
    .hidden
      = render partial: 'replies/single', locals: {reply: @post.replies.find_by(reply_order: 0) }
- if @replies.present?
  = render partial: 'posts/paginator', locals: { paginated: @replies }
= render partial: 'replies/single', collection: @replies, as: :reply
- if @post.completed? && (@replies.empty? || (@replies.last.id == @post.last_reply_id))
  .post-ender Here Ends This Thread
  - if @prev_post || @next_post
    .post-navheader
      - if @next_post
        = link_to post_path(@next_post) do
          .view-button Next Post &raquo;
      - if @prev_post
        = link_to post_path(@prev_post) do
          .view-button.float-none &laquo; Previous Post
- if @post.on_hiatus? && (@replies.empty? || (@replies.last.id == @post.last_reply_id))
  .post-ender This Thread Is On Hiatus
- if @post.abandoned? && (@replies.empty? || (@replies.last.id == @post.last_reply_id))
  .post-ender This Thread Has Been Permanently Abandoned
- if @replies.present?
  = render partial: 'posts/paginator', locals: { paginated: @replies }
- if logged_in? && @unread.nil?
  <a id="unread" class="noheight"> </a>
- if @post.taggable_by?(current_user)
  - post_open = !@post.authors_locked?
  - draft_exists = !@reply.content.nil?
  - if (post_open && draft_exists) || @post.author_for(current_user)&.can_reply?
    = render partial: 'replies/write', locals: { reply: @reply, url: replies_path, method: :post }
  - elsif post_open
    .post-expander.post-editor-expander
      .info + Join Thread
      .hidden
        = render partial: 'replies/write', locals: { reply: @reply, url: replies_path, method: :post }

.centered.margin-10= link_to 'Back to Top', '#'
